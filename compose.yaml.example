version: '3.4'

services:
  database:
    image: ghcr.io/mserajnik/vmangos-database
    restart: unless-stopped
    # The healthcheck determines if the container is working as expected; if
    # the healthchecks fails it causes a restart of the container. The default
    # parameters here should work fine on most systems, but if you experience
    # any issues, you might want to adjust them. In particular, the initial
    # database creation might take a while and you may want to set
    # `start_period` even higher if you notice that the container gets
    # restarted before the initialization finishes.
    healthcheck:
      test: ['CMD', 'healthcheck.sh', '--connect', '--innodb_initialized']
      interval: 1m
      timeout: 3s
      retries: 5
      start_period: 5m # This is set relatively high to take the initial database creation into account
    volumes:
      - vmangos-database:/var/lib/mysql
      # Mount an SQL file as `/sql/world-new.sql` to force the re-creation of
      # the world database (with the contents of the mounted file); make sure
      # to remove this bind mount again before you restart the database the
      # next time or it will continue to re-create the database each time you
      # restart.
      # This can be used to update to a world database dump newer than
      # `world_full_14_june_2021`; however, to my knowledge, this should not be
      # necessary as the database migrations will keep it up to date anyway
      # (and thus, a newer dump would only reduce the time of the initial
      # creation of a fresh database because it would cause potentially lengthy
      # migrations to get skipped).
      # Therefore, this option is merely here to have it available in case it
      # becomes necessary to import a newer world database dump after all.
      #
      # - /path/to/new/world.sql:/sql/world-new.sql:ro
    environment:
      - TZ=Etc/UTC # Change this to your desired timezone (usually you want to match your host system's timezone)
      - MYSQL_ROOT_PASSWORD=password
      # Only a subset covering the most important realmlist parameters is
      # exposed in this configuration file. Changing them here after the
      # database has been created will _not_ update them, but you can always
      # change them (and the other parameters not exposed here) manually in the
      # database at any point (see the `phpmyadmin` service further below).
      - VMANGOS_REALMLIST_NAME=VMaNGOS # Sets the name of the realm as it appears in the selection list and the character screen
      - VMANGOS_REALMLIST_ADDRESS=127.0.0.1 # Sets the LAN or WAN address of the realm; this can also be a domain name
      - VMANGOS_REALMLIST_PORT=8085 # Sets the port of the realm; changing this means it also needs to be changed in other places
      - VMANGOS_REALMLIST_ICON=1 # Sets the icon of the realm; 0 = Normal, 1 = PvP, 6 = RP, 8 = RP PVP
      - VMANGOS_REALMLIST_TIMEZONE=0 # Sets the timezone of the realm; some common values are: 2 = United States, 3 = Oceanic, 4 = Latin America, 8 = English, 9 = German, 10 = French, 11 = Spanish, 12 = Russian
      - VMANGOS_REALMLIST_ALLOWED_SECURITY_LEVEL=0 # Sets the minimum account security level required to log in to the realm; 0 = regular players

  realmd:
    image: ghcr.io/mserajnik/vmangos-server:5875
    # If you are using a Linux host and your user's UID and GID are not 1000,
    # change these values to reflect your user's UID and GID. This will cause
    # the user in the container to use the same UID and GID and prevent
    # permission issues on the bind mounts.
    # If you are on Windows or macOS, you can ignore this.
    user: 1000:1000
    command: realmd
    depends_on:
      - database
    restart: unless-stopped
    # The healthcheck determines if the container is working as expected; if
    # the healthchecks fails it causes a restart of the container. The default
    # parameters here should work fine on most systems, but if you experience
    # any issues, you might want to adjust them. In particular, the initial
    # database creation might take a while and you may want to set
    # `start_period` even higher if you notice that the container gets
    # restarted before the initialization finishes.
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '3724']
      interval: 1m
      timeout: 3s
      retries: 5
      start_period: 5m # This is set relatively high to take the initial database creation into account
    ports:
      - 3724:3724
    volumes:
      - ./config/realmd.conf:/opt/vmangos/config/realmd.conf:ro
      - ./storage/realmd/logs:/opt/vmangos/storage/logs
    environment:
      - TZ=Etc/UTC # Change this to your desired timezone (usually you want to match your host system's timezone)
      - WAIT_HOSTS=database:3306
      - WAIT_TIMEOUT=600

  mangosd:
    image: ghcr.io/mserajnik/vmangos-server:5875
    # If you are using a Linux host and your user's UID and GID are not 1000,
    # change these values to reflect your user's UID and GID. This will cause
    # the user in the container to use the same UID and GID and prevent
    # permission issues on the bind mounts.
    # If you are on Windows or macOS, you can ignore this.
    user: 1000:1000
    command: mangosd
    tty: true
    stdin_open: true
    depends_on:
      - database
    restart: unless-stopped
    # The healthcheck determines if the container is working as expected; if
    # the healthchecks fails it causes a restart of the container. The default
    # parameters here should work fine on most systems, but if you experience
    # any issues, you might want to adjust them. In particular, the initial
    # database creation might take a while and you may want to set
    # `start_period` even higher if you notice that the container gets
    # restarted before the initialization finishes.
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '8085']
      interval: 1m
      timeout: 3s
      retries: 5
      start_period: 5m # This is set relatively high to take the initial database creation into account
    ports:
      - 8085:8085
    volumes:
      - ./config/mangosd.conf:/opt/vmangos/config/mangosd.conf:ro
      - ./storage/mangosd/extracted-data:/opt/vmangos/storage/data:ro
      - ./storage/mangosd/logs:/opt/vmangos/storage/logs
      - ./storage/mangosd/honor:/opt/vmangos/storage/honor
      # To enable the usage of Warden you need to use an image with anticheat
      # support (e.g., ghcr.io/mserajnik/vmangos-server:5875-anticheat).
      # Then, download the Warden modules from
      # https://github.com/vmangos/warden_modules and place them into
      # `./storage/mangosd/warden-modules`. Note that the Warden modules are
      # only available for `x86_64`, so you will not be able to use Warden when
      # using `aarch64` images.
      # Finally, uncomment the following bind mount and (optionally) adjust
      # the Warden configuration in your `./config/mangosd.conf` (in
      # particular, ensure that `Warden.ModuleDir` is set to
      # `/opt/vmangos/storage/warden-modules`).
      # - ./storage/mangosd/warden-modules:/opt/vmangos/storage/warden-modules
    environment:
      - TZ=Etc/UTC # Change this to your desired timezone (usually you want to match your host system's timezone)
      - WAIT_HOSTS=database:3306
      - WAIT_TIMEOUT=600

  # Uncomment this service to enable periodic database backups.
  # The default configuration should work out of the box (unless you have
  # changed the database service configuration) and will create a backup every
  # day at 04:00 (change the `TIMEZONE` environment variable to your desired
  # timezone). Backups older than a week will automatically get deleted.
  # Backups will be stored in `./database-backups`.
  # See https://github.com/tiredofit/docker-db-backup#configuration for more
  # information.
  # database-backup:
  #   image: tiredofit/db-backup
  #   depends_on:
  #     - database
  #   restart: unless-stopped
  #   volumes:
  #     - ./database-backups:/backup
  #   environment:
  #     - TIMEZONE=Etc/UTC # Change this to your desired timezone (usually you want to match your host system's timezone)
  #     - CONTAINER_ENABLE_MONITORING=FALSE
  #     # If you are using a Linux host and your user's UID and GID are not 1000,
  #     # change these next two variables to reflect your user's UID and GID.
  #     # This will cause the user in the container to use the same UID and GID
  #     # and prevent permission issues on the bind mount.
  #     # If you are on Windows or macOS, you can ignore this.
  #     - USER_DBBACKUP=1000
  #     - GROUP_DBBACKUP=1000
  #     - DEFAULT_COMPRESSION=GZ
  #     - DEFAULT_BACKUP_INTERVAL=1440 # How often to run the backup in minutes; 1440 means once per day
  #     - DEFAULT_BACKUP_BEGIN=0400 # When to start the backup; 0400 means it starts at 04:00
  #     - DEFAULT_CLEANUP_TIME=10080 # How old backups have to be to get deleted; 10080 means backups older than a week get deleted
  #     - DB01_TYPE=mariadb
  #     - DB01_HOST=database
  #     - DB01_NAME=characters,realmd # Which databases should be backed up
  #     - DB01_USER=root
  #     - DB01_PASS=password

  # Uncomment this service to run phpMyAdmin, a web-based MySQL/MariaDB
  # database administration tool.
  # This can be useful to manage accounts, make changes to the realm
  # configuration etc.
  # With the default configuration, you should be able to open
  # http://localhost:8080 in your browser and have access to all of the
  # databases VMaNGOS uses.
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   depends_on:
  #     - database
  #   restart: unless-stopped
  #   ports:
  #     - 8080:80
  #   environment:
  #     - PMA_HOST=database
  #     - PMA_PORT=3306
  #     - PMA_USER=root
  #     - PMA_PASSWORD=password

volumes:
  vmangos-database:
