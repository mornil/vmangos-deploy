name: Build and push Docker images

on:
  # Build images daily
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - 'master'
    paths:
      - 'docker/**'
  pull_request:
    branches:
      - 'master'
    paths:
      - 'docker/**'
  workflow_dispatch:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      commit-hash: ${{ steps.latest-commit-hash.outputs.result }}
      already-built: ${{ steps.already-built.outputs.result }}

    steps:
      - name: Get latest commit hash
        uses: actions/github-script@v6
        id: latest-commit-hash
        with:
          result-encoding: string
          retries: 3
          script: |
            const ref = await github.rest.git.getRef({
              owner: 'vmangos',
              repo: 'core',
              ref: 'heads/development',
            })

            return ref.data.object.sha

      - name: Determine if images for commit hash have already been built
        id: already-built
        run: |
          ghcr_token=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          tags=$(skopeo list-tags --registry-token ${ghcr_token} docker://ghcr.io/mserajnik/vmangos-database | jq '.Tags[]')
          if grep -q "${{ steps.latest-commit-hash.outputs.result }}" <<< "$tags"; then
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "result=false" >> $GITHUB_OUTPUT
          fi


  build-and-push-docker-images:
    name: Build and push images
    needs: setup
    if: ${{ needs.setup.outputs.already-built != 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - dockerfile: ./docker/database/Dockerfile
            image: ghcr.io/mserajnik/vmangos-database
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 5875
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 5464
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 5302
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 5086
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 4878
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 4695
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 4544
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 4449
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 4375
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 4297
          - dockerfile: ./docker/server/Dockerfile
            image: ghcr.io/mserajnik/vmangos-server
            client-version: 4222
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate tags
        uses: actions/github-script@v6
        id: generate-tags
        env:
          COMMIT_HASH: '${{ needs.setup.outputs.commit-hash }}'
          MATRIX_DOCKERFILE: '${{ matrix.dockerfile }}'
          MATRIX_IMAGE: '${{ matrix.image }}'
          MATRIX_CLIENT_VERSION: '${{ matrix.client-version }}'
        with:
          result-encoding: string
          script: |
            const tags = []

            if (process.env.MATRIX_IMAGE === 'ghcr.io/mserajnik/vmangos-database') {
              tags.push(`${process.env.MATRIX_IMAGE}:latest`)
              tags.push(`${process.env.MATRIX_IMAGE}:${process.env.COMMIT_HASH}`)
            }

            if (process.env.MATRIX_IMAGE === 'ghcr.io/mserajnik/vmangos-server') {
              // We tag the newest build for client version 5875 with `latest`
              // since that can be considered the default
              if (parseInt(process.env.MATRIX_CLIENT_VERSION) === 5875) {
                tags.push(`${process.env.MATRIX_IMAGE}:latest`)
              }

              tags.push(`${process.env.MATRIX_IMAGE}:${process.env.MATRIX_CLIENT_VERSION}`)
              tags.push(`${process.env.MATRIX_IMAGE}:${process.env.MATRIX_CLIENT_VERSION}-${process.env.COMMIT_HASH}`)
            }

            return tags.join(',')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          provenance: false
          build-args: |
            VMANGOS_REVISION=${{ needs.setup.outputs.commit-hash }}
          tags: ${{ steps.generate-tags.outputs.result }}
